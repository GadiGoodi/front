{
  "root": true,  // 프로젝트 루트 디렉토리에서 ESLint 설정을 찾도록 지정
  "parser": "@typescript-eslint/parser",  // TypeScript 파일을 파싱하기 위한 파서 설정
  "plugins": [
    "@typescript-eslint",  // TypeScript 규칙을 위한 플러그인
    "prettier",  // Prettier와 ESLint 규칙을 결합
    "import"  // import 관련 규칙을 위한 플러그인
  ],
  "parserOptions": {
    "project": "./tsconfig.json",  // TypeScript 프로젝트 파일 경로 지정
    "createDefaultProgram": true  // 기본 프로그램을 생성하여 구형 TypeScript 버전에서도 작동하도록 설정
  },
  "env": {
    "browser": true,  // 브라우저 환경에서 document, window 객체 인식
    "node": true,  // Node.js 환경에서 동작
    "es6": true  // ES6 구문을 지원하도록 설정
  },
  "ignorePatterns": ["node_modules/"],  // node_modules 폴더는 ESLint 검사에서 제외
  "extends": [
    "airbnb",  // Airbnb의 코드 스타일을 따르도록 기본 규칙 제공
    "airbnb-typescript",  // TypeScript를 위한 Airbnb 코드 스타일
    "airbnb/hooks",  // React hooks 관련 Airbnb 스타일 규칙
    "next/core-web-vitals",  // Next.js의 웹 성능 관련 기본 규칙
    "next/typescript",  // Next.js에서 TypeScript를 사용할 때 필요한 규칙
    "plugin:@typescript-eslint/recommended",  // TypeScript 관련 ESLint 권장 규칙
    "plugin:prettier/recommended",  // Prettier와 ESLint 규칙 결합 (Prettier 포매팅을 강제로 적용)
    "prettier",  // Prettier와 중복된 ESLint 규칙을 비활성화
    "eslint-config-prettier",  // Prettier와 충돌하는 ESLint 규칙을 비활성화
    "plugin:import/recommended",  // import 관련 ESLint 규칙 활성화
    "plugin:import/typescript",  // TypeScript import 관련 규칙 활성화
    "eslint:recommended",  // 기본적인 ESLint 추천 규칙
    "plugin:react/recommended",  // React 관련 ESLint 권장 규칙
    "plugin:react-hooks/recommended"  // React Hooks 관련 ESLint 권장 규칙
  ],
  "settings": {
    "import/resolver": {
      "typescript": {}  // TypeScript의 경로 별칭을 해결하기 위한 설정
    },
    "import/parsers": { "@typescript-eslint/parser": [".ts"] }  // .ts 확장자에 대해 TypeScript 파서를 사용하도록 설정
  },
  "rules": {
    "@typescript-eslint/no-explicit-any": "off",  // 'any' 타입 사용을 허용 (엄격한 타입 제한을 피하기 위함)
    "react/react-in-jsx-scope": "off",  // React 17 이후로 JSX 파일에서 React를 import할 필요 없음
    "react/jsx-filename-extension": ["warn", { "extensions": [".ts", ".tsx"] }],  // .tsx 파일에서도 JSX 사용 가능
    "react/function-component-definition": [
      2,
      { "namedComponents": ["arrow-function", "function-declaration"] }  // 함수형 컴포넌트 정의 방식에 대한 규칙
    ],
    "sort-imports": [
      "error",
      {
        "ignoreCase": false,  // import 문에서 대소문자 구분
        "ignoreDeclarationSort": false,  // 선언된 import 문들의 정렬을 강제
        "ignoreMemberSort": false,  // import 문 내부에서 member들의 정렬을 강제
        "memberSyntaxSortOrder": ["none", "all", "multiple", "single"],  // member import 순서 정의
        "allowSeparatedGroups": false  // import 그룹 사이에 빈 줄을 허용하지 않음
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          ["builtin", "external"],  // Node.js 기본 모듈과 외부 라이브러리 모듈을 묶기
          "internal",  // 내부 모듈 그룹
          ["parent", "sibling"],  // 상위 및 형제 디렉토리 모듈 그룹
          "index",  // 인덱스 모듈 그룹
          "object"  // 객체 모듈 그룹
        ],
        "pathGroups": [
          {
            "pattern": "~/**",  // '~'로 시작하는 경로를 external 그룹의 최상위에 위치시키기
            "group": "external",
            "position": "before"
          },
          { "pattern": "@*", "group": "external", "position": "after" },  // '@'로 시작하는 경로는 external 그룹에서 뒤에 위치
          { "pattern": "@*/**", "group": "external", "position": "after" }  // '@'로 시작하는 하위 경로도 external 그룹에서 뒤에 위치
        ],
        "pathGroupsExcludedImportTypes": ["react"],  // React는 별도로 다룸
        "newlines-between": "always",  // import 그룹 사이에 빈 줄을 추가하도록 설정
        "alphabetize": {
          "order": "asc",  // 알파벳 순으로 정렬
          "caseInsensitive": true  // 대소문자 구분 없이 정렬
        }
      }
    ]
  }
}
